@page
@using eBazaar.Api.Models
@model eBazaar.Web.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
}

<div class="w-full">

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mx-auto px-5 items-center max-w-7xl">
        <div class="card bg-custom-blue text-white w-auto">
            <div class="card-body">
                <i class="fa-solid fa-house-user fa-3x"></i>
                <h2 class="card-title">Total Products : @Model.TotalProductCount</h2>
                <p>
                    Warehouse has total of @Model.TotalProductCount products
                    today &amp; the max capacity is 200.
                </p>
            </div>
        </div>
        <div class="card bg-custom-blue text-white w-auto">
            <div class="card-body">
                <i class="fa-solid fa-users-gear fa-3x"></i>
                <h2 class="card-title">Total Vendors : 06</h2>
                <p>
                    A total of 6 out of 10 vendor are
                    available for supply now.
                </p>
            </div>
        </div>
        <div class="card bg-custom-blue text-white w-auto">
            <div class="card-body">
                <i class="fa-solid fa-box fa-3x"></i>
                <h2 class="card-title">Unique Products : 40</h2>
                <p>
                    Total number of products that are
                    not duplicate or redundant.
                </p>
            </div>
        </div>
    </div>

    <!-- Header Section -->
    <div class="max-w-7xl mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-8 pt-4">
            <div class="flex gap-6 items-center">
                <form method="get">
                    <div class="form-control">
                        <div class="input-group">
                            <input type="text" asp-for="SearchQuery" placeholder="Search products..."
                                   class="input input-bordered w-96 p-4 border-2 border-custom-blue bg-white text-custom-dark rounded" />
                            <button class="btn btn-outline border-custom-blue text-custom-blue" type="submit">Search</button>
                        </div>
                    </div>
                </form>
            </div>
            <button class="btn btn-outline border-custom-blue text-custom-blue" onclick="document.getElementById('AddProduct_modal').showModal()">Add Product</button>
        </div>

        <!-- Results Counter -->
        <div class="text-custom-dark text-xl mb-6">
            Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1)-@(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalProductCount)) of @Model.TotalProductCount results
        </div>

        <!-- Products Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 pt-4 pb-3">
            @foreach (var product in Model.Products)
            {
                <div class="card bg-custom-lighter hover:shadow-xl transition-all duration-300 border border-custom-light hover:border-custom-blue">
                    <figure class="px-4 pt-4">
                        <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "https://placehold.co/600x400?text=Hello+World" : product.ImageUrl)"
                        alt="@product.Name"
                        class="rounded-xl h-48 w-full object-cover" />
                    </figure>
                    <div class="card-body p-4">
                        <h2 class="card-title text-custom-dark text-lg font-semibold">@product.Name</h2>
                        <p class="text-custom-gray text-sm line-clamp-2">@product.Description</p>
                        @if (product.StockQuantity < 10)
                        {
                            <div class="badge badge-warning gap-2 mt-2">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="w-4 h-4 stroke-current">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                </svg>
                                Only @product.StockQuantity left!
                            </div>
                        }
                        <div class="flex justify-between items-center mt-4">
                            @if (product.DiscountPercentage > 0)
                            {
                                <div class="flex flex-col">
                                    <span class="text-xl font-bold text-custom-dark">$@product.GetCurrentPrice().ToString("F2")</span>
                                    @if(product.GetCurrentPrice() != product.Price)
                                    {
                                        <span class="text-sm text-custom-gray line-through">$@product.Price.ToString("F2")</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-xl font-bold text-custom-dark">$@product.Price.ToString("F2")</span>
                            }
                            <div class="card-actions">
                                <button class="btn btn-sm bg-custom-blue text-white hover:bg-custom-blue-light border-none"
                                        onclick="addToCart('@product.Id')">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="flex justify-end space-x-2 mt-8 pt-4">
                <form method="get" class="flex space-x-2">
                    @if (Model.CurrentPage > 1)
                    {
                        <a asp-page="./Index"
                           asp-route-currentPage="@(Model.CurrentPage - 1)"
                           asp-route-searchQuery="@Model.SearchQuery"
                           asp-route-pageSize="@Model.PageSize"
                           class="btn btn-outline text-custom-blue hover:bg-custom-blue hover:text-white">
                            Previous
                        </a>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <a asp-page="./Index"
                           asp-route-currentPage="@i"
                           asp-route-searchQuery="@Model.SearchQuery"
                           asp-route-pageSize="@Model.PageSize"
                           class="btn @(i == Model.CurrentPage ? "bg-custom-blue text-white border-custom-blue" : "btn-outline text-custom-blue hover:bg-custom-blue hover:text-white")">
                            @i
                        </a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <a asp-page="./Index"
                           asp-route-currentPage="@(Model.CurrentPage + 1)"
                           asp-route-searchQuery="@Model.SearchQuery"
                           asp-route-pageSize="@Model.PageSize"
                           class="btn btn-outline text-custom-blue hover:bg-custom-blue hover:text-white">
                            Next
                        </a>
                    }

                    <div class="form-control">
                        <select name="PageSize" asp-for="PageSize" class="select select-bordered border-2 border-custom-blue bg-white text-custom-dark" onchange="this.form.submit()">
                            <option value="8">8 per page</option>
                            <option value="12">12 per page</option>
                            <option value="24">24 per page</option>
                            <option value="36">36 per page</option>
                        </select>
                    </div>
                    <input type="hidden" name="SearchQuery" value="@Model.SearchQuery" />
                    <input type="hidden" name="CurrentPage" value="1" />
                </form>
            </div>
        }
    </div>
</div>

@await Html.PartialAsync("Shared/_CartModal", Model.CartItems)

<partial name="_AddProductModal" model="new Product()" />


